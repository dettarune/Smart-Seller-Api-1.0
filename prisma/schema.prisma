// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String @id @default(uuid()) @db.Char(36)
  username String @db.VarChar(60)
  email    String @unique @db.VarChar(60)
  password String @db.VarChar(100)

  ResetPasswordToken ResetPasswordToken[]
}

model ResetPasswordToken {
  id        Int      @id @default(autoincrement())
  accountId String   @db.Char(36)
  token     String   @unique @db.VarChar(100)
  expired   DateTime
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())

  account Account @relation(fields: [accountId], references: [id])
}

model Product {
  id              String   @id @default(uuid()) @db.Char(36)
  namaProduk      String   @unique @db.VarChar(60)
  deskripsiProduk String?  @db.Text
  hargaProduk     Float    @db.Float
  stokProduk      Int      @db.Int
  createdAt       DateTime @default(now())

  ProductKategori ProductKategori[]

  ProductImg ProductImg[]
}

model ProductKategori {
  id           Int      @id @default(autoincrement())
  produkId     String   @db.Char(36)
  atribut      String   @db.VarChar(20)
  value        String   @db.VarChar(20)
  stok         Int      @db.Int
  harga        Float    @db.Float
  createdAt    DateTime @default(now())

  product Product @relation(fields: [produkId], references: [id])
}

model ProductImg {
  id        Int      @id @default(autoincrement())
  productId String   @db.Char(36)
  imgUrl    String   @db.VarChar(100)
  createdAt DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
}
